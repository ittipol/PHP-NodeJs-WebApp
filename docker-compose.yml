version: "3.7"
services:
  app:
    build:
      args:
        user: test_user
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: web_app_php
    container_name: web-app-php
    restart: unless-stopped
    # working_dir: /var/www/
    volumes:
      - app-volume:/var/www
    #   - ./:/var/www
    networks:
      - web-app-network

  db:
    image: mysql:8.0
    container_name: web-app-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: ticketeasys_web
    expose:
      - 3306
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
    networks:
      - web-app-network

  nginx:
    image: nginx:alpine
    container_name: web-server-nginx
    restart: unless-stopped
    ports:
      - 8080:80
    working_dir: /var/www/
    volumes:
      # - ./:/var/www
      - app-volume:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - web-app-network

  redis:
    image: redis
    container_name: web-app-redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - web-app-network

  nodejs:
    build: ./node_server
    image: web_app_nodejs
    container_name: web-app-nodejs
    #restart: unless-stopped
    # working_dir: /usr/src/app
    # volumes:
    #   - ./node_server:/usr/src/app
    ports:
      - 6180:6180
    networks:
      - web-app-network

  myadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
        - 8081:80
    environment:
        - PMA_ARBITRARY=1
        - PMA_HOST=db
    restart: unless-stopped
    depends_on:
        - db
    networks:
      - web-app-network

networks:
  web-app-network:
    driver: bridge

volumes:
  app-volume: 